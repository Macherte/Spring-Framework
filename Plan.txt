core
	- real estate
		- models 
			- Building
				- type: house, apartment, office, retail unit (enum)
				- useful floor space (double)
				- year of construction (date)
				- city (string)
				- U-value (double)
				- R-value (double)
				- A/V value (double)
				- low-e glazing windows (bool)
				- orientation (enum)
				- water	(bool)
				- gas (bool)
				- electricity (bool)
				- canal (bool)
		- exceptions
			- NoMatchingIDException
			- InvalidDateException
			- InvalidRValueException
			- InvalidUValueException
			- InvalidAVValueException
			
	- service (interface)
		- BuildingService
			- getAllBuilding()
			- getBuilding(UUID)
			- getBuilding(Building)
			- deleteBuilding(Building)
			- updateBuilding(Building)
			- insertBuilding(Building)
	
Service	
		dependency: artifactId core
	- dao 
		- BuildingDAO (interface) (throws exceptions)
			- CreateBuilding
			- ReadAllBuilding() Collection
			- ReadAllBuilding(Building) Building
			- updateBuilding 
			- deleteBuilding
	- services.impl
		- BuildingServiceImplementation (throws exceptions, implements BuildingService with BuildingDAO dependency injection)
		
DAO
		dependency: artifactId Service, jackson-databind, jackson-datatype-jsr310
	- dao.impl.json
		BuildingDAOJSON implements BuildingDAO
		
		
Controller
		dependency: artifactId core, spring-webmvc
	- controllers
		BuildingController
			- countBuilding: GET, /count
			- getAllBuilding: GET, /buildings
			- addBuilding: POST, /addbuilding
			- getBuildingByType: GET, /buildings/{type}
			- getBuildingById: GET, /buildings/{id}
			- deleteBuilding, 
			
			implementation of exceptions
			
Web
		dependency: artifactId spring-webmvc, controller, dao, 
		
	dispatcher-config.xml
	web.xml
	
	
Tomcat